[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mnemonic"
version = "0.1.0"
description = "A local-first, personal AI context engine that remembers"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Giri Vel", email = "giridharanvel@gmail.com"}
]
keywords = ["ai", "memory", "vector-search", "semantic-search", "personal-ai"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "chromadb>=0.4.22",
    "click>=8.1.7",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "black>=23.12.0",
    "ruff>=0.1.9",
    "mypy>=1.7.1",
]

[project.scripts]
mnemonic = "mnemonic.cli:cli"

[project.urls]
Homepage = "https://github.com/Giri-Vel/mnemonic_memory_ai"
Repository = "https://github.com/Giri-Vel/mnemonic_memory_ai"
Issues = "https://github.com/Giri-Vel/mnemonic_memory_ai/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mnemonic*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--cov=mnemonic",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true